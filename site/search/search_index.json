{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"RETAIL API Bienvenido a la API de retail.pogendata.com, esta API ha sido construida utilizando Python y FastAPI como tecnolog\u00edas principales. Esta documentaci\u00f3n solo es concierne a la estructura y funcionamiento del proyecto, si busca la documentaci\u00f3n de los endpoints puede ir a la secci\u00f3n de documentaci\u00f3n de endpoints para obtener mas informaci\u00f3n (o a la secci\u00f3n de autenticaci\u00f3n para aprender sobre esta).","title":"Home"},{"location":"#retail-api","text":"Bienvenido a la API de retail.pogendata.com, esta API ha sido construida utilizando Python y FastAPI como tecnolog\u00edas principales. Esta documentaci\u00f3n solo es concierne a la estructura y funcionamiento del proyecto, si busca la documentaci\u00f3n de los endpoints puede ir a la secci\u00f3n de documentaci\u00f3n de endpoints para obtener mas informaci\u00f3n (o a la secci\u00f3n de autenticaci\u00f3n para aprender sobre esta).","title":"RETAIL API"},{"location":"autenticacion/","text":"Todos los endpoint de la API necesitan autenticaci\u00f3n para poder ejecutarlos, para ello necesita primero ingresar un usuario v\u00e1lido en el endpoint Login del m\u00f3dulo Auth , este m\u00f3dulo verificar\u00e1 que el usuario que ingrese este activo, le regresar\u00e1 un JSON con la siguiente informaci\u00f3n: { \"usuario_id: 12345, \"api_key\": \"apiKeyCode\" } Estas credenciales ser\u00e1n v\u00e1lidas por una hora, pasado ese tiempo tendr\u00e1 que generar un nuevo login. En cada petici\u00f3n tendr\u00e1 que incluir los siguientes headers: En la documentaci\u00f3n de OpenAPI ver\u00e1 que estos dos par\u00e1metros se repetir\u00e1n mucho, pues son necesarios para poder acceder a los endpoints de la API.","title":"Login y autenticaic\u00f3n"},{"location":"endpoints_openapi/","text":"Al utilziar FastAPI se tiene la ventaja de que la documentaci\u00f3n se genera de una manera semi-autom\u00e1tica utilizando OpenJSON, para acceder a la documentaci\u00f3n pruebe en ir a la ruta /docs del host en d\u00f3nde levant\u00f3 la API (ej: http://0.0.0.0:8000/docs), all\u00ed podr\u00e1 visualizar la siguiente pantalla: Para entender esta documentaci\u00f3n analizemos sus elementos: Categor\u00edas / Tags Los endpoints de la API est\u00e1n agrupados por tags dentro de la aplicaci\u00f3n, por lo que si busca alg\u00fan endpoint relacionado, por ejemplo, con la obtenci\u00f3n de usuarios, puede dirigrse a la categor\u00eda \"Usuarios\" y buscar dicho endpoint. Informaci\u00f3n del endpoint Cada dropdown de los endpoints contiene la informaci\u00f3n necesaria para saber su m\u00e9todo y su ruta, en el siguiente ejemplo tenemos dos endpoints con los m\u00e9todos PUT y DELETE, si quisiera acceder al endpoint PUT, entonces tendr\u00eda que acceder mediante la ruta http://HOST:PUERTO/categories/rename_category/ Descripci\u00f3n y datos necesarios Una vez que seleccione un endpoint visualizar\u00e1 un peque\u00f1o recuardro con la informaci\u00f3n de lo que hace. Debajo de este recuadro encotrar\u00e1 los par\u00e1metros necesarios o el formato del body que el endpoint necesita, en la mayor\u00eda de los endpoints los par\u00e1metros estar\u00e1n acompa\u00f1ados de una descripci\u00f3n y un ejemplo. En este ejemplo podemos ver que el endpoint tiene como par\u00e1metros nombre y grupo_id, adem\u00e1s de los headers de autenticaci\u00f3n que son necesarios para este. En este otro ejemplo se puede apreciar el formato necesario de un body request el cu\u00e1l ser\u00e1 necesario para que el endpoint acepte la petici\u00f3n: Respuesta del endpoint Si desea saber que tipo de respuestas puede devolver un endpoint o el formato de estas, al final de los datos puede encontrar una secci\u00f3n con ejemplos de respuestas que puede arrojar una petici\u00f3n hac\u00eda ese endpoint.","title":"Documentaci\u00f3n de los endpoints"},{"location":"estructura/","text":"Al entrar al directorio de la aplicaci\u00f3n podr\u00e1 apreciar la siguiente estructura: El contenido de las carpetas y archivos es el siguiente: modules: Aqu\u00ed se encuentran todos los endpoints del proyecto, est\u00e1n separados en diferentes archivos, cada archivo representa una ruta diferente en la API, los endpoints est\u00e1n organizados para que coincidan con la organizaci\u00f3n de las p\u00e1ginas de Retail, es decir, los endpoints del m\u00f3dulo categories est\u00e1n destinados a ser utilizados en la p\u00e1gina de agrupaciones, los endpoints de goals se usan en la p\u00e1gina de objetivos. sql: Solo contiene un archivo con las conexiones hac\u00eda las bases de datos de PogenData y Retail. .env: En este archivo se deber\u00e1n declarar las variables de entorno necesarias para el proyecto. .gitignore: Archivo git ignore. main.py: Es el principal archivo del proyecto, aqu\u00ed se declara el objeto FastAPI el cu\u00e1l contiene toda la informaci\u00f3n de la API, adem\u00e1s de que aqu\u00ed se importan los routers de los modulos para incorporarlos a la aplicaci\u00f3n, as\u00ed como los metadatos de la API. readme.md: Archivo readme informativo. requirements.txt: Contiene todas las dependencias necesarias para el proyecto","title":"Estructura del proyecto"},{"location":"iniciando/","text":"Antes de iniciar Primeros pasos Antes de ejecutar la API, se recomienda crear un entorno virtual para instalar todas las dependencias dentro de este, para hacerlo, ejecute en el int\u00e9rprete de comandos la instrucci\u00f3n para crear un entorno virtual con Python: python -m venv /path/to/venv Para activarlo, posicionese en la carpeta donde fue creado el entorno virtual y activelo con el comando: source bin/activate Una vez activado correctamente el entorno, proceda a installar las dependencias del archivo requirements.txt que se encuentra en la carpeta ra\u00edz del proyecto ejecutando el siguiente comando: pip install -r requirements.txt NOTA: la aplicaci\u00f3n esta creada con Python 11, por lo que es posible que algunas versiones de las librer\u00edas no esten disponibles para otras versiones de Python por lo que tendr\u00e1n que ser instaladas manualmente, es posible que el proyecto funcione de manera extra\u00f1a con otras versiones de las librer\u00edas. Variables de entorno Por seguridad, los datos sensibles dentro de la aplicaci\u00f3n no estan escritos en texto plano, estos datos se consiguen a trav\u00e9s de un archivo .env que usted deber\u00e1 crear en la carpeta ra\u00edz del proyecto al momento de descargar el repositorio, esta es la lista de las variables de entorno necesarias para que la aplicaic\u00f3n funcione correctamente RETAIL_HOST : Host de la base de datos de Retail RETAIL_DB : Base de datos de Retail a la que desea conectarse RETAIL_USER : Usuario de la base de datos de Retail RETAIL_PW : Contrase\u00f1a del usuario Retail DATA_HOST : Host de la base de datos de PogenData DATA_DB : Base de datos de PogenData a la que desea conectarse DATA_USER : Usuario de la base de datos de PogenData DATA_PW : Contrase\u00f1a del usuario PogenData RECIPIENT_EMAIL : Correo al que se enviar\u00e1n los reportes de las plazas en el m\u00f3dulo contacto SANDBOX_EMAIL : Email proporcionado por la API de Mailgun para enviar correos MAILGUN_APIKEY : API Key para utilizar la API de Mailgun Iniciando el proyecto Habiendo instalado las dependencias necesarias para el proyecto, ejecute el siguiente comando para iniciar un servidor de Uvicorn desde la carpeta del proyecto uvicorn main:app --host 0.0.0.0 --port 8000 El comando de uvicorn recibe como par\u00e1metro el nombre del archivo .py principal del proyecto, junto con ello, tambi\u00e9n se recibe el nombre del objeto FastAPI que contiene toda la aplicaci\u00f3n, adem\u00e1s recibe como opciones el host y el puerto en el que se desea ejecutar (tambi\u00e9n es posible agregar la opci\u00f3n --reload por si es necesario editar el c\u00f3digo y que se actualize la API en autom\u00e1tico cada vez que el c\u00f3digo es modificado). Al ejecutar este comando ver\u00e1 el siguiente output en la terminal: Si visita la direcci\u00f3n desde su navegador web deber\u00e1 de poder visualizar el siguiente mensaje: Si ha logrado ver esa pantalla, entonces ha logrado hacer que la aplicaic\u00f3n funcione correctamente. Docker Actualmente la aplicaci\u00f3n no esta dockerizada, se espera su implementaci\u00f3n pr\u00f3ximamente.","title":"Iniciando"},{"location":"iniciando/#antes-de-iniciar","text":"","title":"Antes de iniciar"},{"location":"iniciando/#primeros-pasos","text":"Antes de ejecutar la API, se recomienda crear un entorno virtual para instalar todas las dependencias dentro de este, para hacerlo, ejecute en el int\u00e9rprete de comandos la instrucci\u00f3n para crear un entorno virtual con Python: python -m venv /path/to/venv Para activarlo, posicionese en la carpeta donde fue creado el entorno virtual y activelo con el comando: source bin/activate Una vez activado correctamente el entorno, proceda a installar las dependencias del archivo requirements.txt que se encuentra en la carpeta ra\u00edz del proyecto ejecutando el siguiente comando: pip install -r requirements.txt NOTA: la aplicaci\u00f3n esta creada con Python 11, por lo que es posible que algunas versiones de las librer\u00edas no esten disponibles para otras versiones de Python por lo que tendr\u00e1n que ser instaladas manualmente, es posible que el proyecto funcione de manera extra\u00f1a con otras versiones de las librer\u00edas.","title":"Primeros pasos"},{"location":"iniciando/#variables-de-entorno","text":"Por seguridad, los datos sensibles dentro de la aplicaci\u00f3n no estan escritos en texto plano, estos datos se consiguen a trav\u00e9s de un archivo .env que usted deber\u00e1 crear en la carpeta ra\u00edz del proyecto al momento de descargar el repositorio, esta es la lista de las variables de entorno necesarias para que la aplicaic\u00f3n funcione correctamente RETAIL_HOST : Host de la base de datos de Retail RETAIL_DB : Base de datos de Retail a la que desea conectarse RETAIL_USER : Usuario de la base de datos de Retail RETAIL_PW : Contrase\u00f1a del usuario Retail DATA_HOST : Host de la base de datos de PogenData DATA_DB : Base de datos de PogenData a la que desea conectarse DATA_USER : Usuario de la base de datos de PogenData DATA_PW : Contrase\u00f1a del usuario PogenData RECIPIENT_EMAIL : Correo al que se enviar\u00e1n los reportes de las plazas en el m\u00f3dulo contacto SANDBOX_EMAIL : Email proporcionado por la API de Mailgun para enviar correos MAILGUN_APIKEY : API Key para utilizar la API de Mailgun","title":"Variables de entorno"},{"location":"iniciando/#iniciando-el-proyecto","text":"Habiendo instalado las dependencias necesarias para el proyecto, ejecute el siguiente comando para iniciar un servidor de Uvicorn desde la carpeta del proyecto uvicorn main:app --host 0.0.0.0 --port 8000 El comando de uvicorn recibe como par\u00e1metro el nombre del archivo .py principal del proyecto, junto con ello, tambi\u00e9n se recibe el nombre del objeto FastAPI que contiene toda la aplicaci\u00f3n, adem\u00e1s recibe como opciones el host y el puerto en el que se desea ejecutar (tambi\u00e9n es posible agregar la opci\u00f3n --reload por si es necesario editar el c\u00f3digo y que se actualize la API en autom\u00e1tico cada vez que el c\u00f3digo es modificado). Al ejecutar este comando ver\u00e1 el siguiente output en la terminal: Si visita la direcci\u00f3n desde su navegador web deber\u00e1 de poder visualizar el siguiente mensaje: Si ha logrado ver esa pantalla, entonces ha logrado hacer que la aplicaic\u00f3n funcione correctamente.","title":"Iniciando el proyecto"},{"location":"iniciando/#docker","text":"Actualmente la aplicaci\u00f3n no esta dockerizada, se espera su implementaci\u00f3n pr\u00f3ximamente.","title":"Docker"},{"location":"modulos_api/","text":"Actualmente la API se divide en 7 diferentes m\u00f3dulos: Auth Aqu\u00ed se encuentra el endpoint para realizar el login, este es el \u00fanico endpoint en todo el proyecto que no neesita los headers de autenticaic\u00f3n , adem\u00e1s de que se haya la dependencia que se ejecuta en cada endpoint para comprobar la identidad de la persona que desea utilizar un endpoint. Categories Estos endpoints est\u00e1n relacionados a la consulta, creaci\u00f3n, modificaci\u00f3n y eliminaci\u00f3n de agrupaciones, as\u00ed como sus respectivos sub-categor\u00edas/grupos, adem\u00e1s de que est\u00e1 la posibilidad de asignar y remover plazas a los grupos. Contact Consta de un \u00fanico endpoint el cu\u00e1l es utilizado para poder enviar un correo de reporte hac\u00eda el equipo de mantenimiento. Dashboard Contiene el endpoint que se utiliza para extraer la informaci\u00f3n b\u00e1sica que se desplegar\u00e1 en la p\u00e1gina de inicio. Goals Son los endpoints relacionados a la consulta y modificacion de los objetivos anuales por plazas. Misc Estos endpoints no est\u00e1n incluidos dentro de la API, son consultas que se encontraron dentro de la versi\u00f3n antigua del sitio web de Retail, pero no tienen un uso en esta API. Users Endpoints para obtener los usuarios que pueden subir archivos a la plataforma, desde aqu\u00ed se pueden modificar sus permisos.","title":"M\u00f3dulos de la API"},{"location":"modulos_api/#auth","text":"Aqu\u00ed se encuentra el endpoint para realizar el login, este es el \u00fanico endpoint en todo el proyecto que no neesita los headers de autenticaic\u00f3n , adem\u00e1s de que se haya la dependencia que se ejecuta en cada endpoint para comprobar la identidad de la persona que desea utilizar un endpoint.","title":"Auth"},{"location":"modulos_api/#categories","text":"Estos endpoints est\u00e1n relacionados a la consulta, creaci\u00f3n, modificaci\u00f3n y eliminaci\u00f3n de agrupaciones, as\u00ed como sus respectivos sub-categor\u00edas/grupos, adem\u00e1s de que est\u00e1 la posibilidad de asignar y remover plazas a los grupos.","title":"Categories"},{"location":"modulos_api/#contact","text":"Consta de un \u00fanico endpoint el cu\u00e1l es utilizado para poder enviar un correo de reporte hac\u00eda el equipo de mantenimiento.","title":"Contact"},{"location":"modulos_api/#dashboard","text":"Contiene el endpoint que se utiliza para extraer la informaci\u00f3n b\u00e1sica que se desplegar\u00e1 en la p\u00e1gina de inicio.","title":"Dashboard"},{"location":"modulos_api/#goals","text":"Son los endpoints relacionados a la consulta y modificacion de los objetivos anuales por plazas.","title":"Goals"},{"location":"modulos_api/#misc","text":"Estos endpoints no est\u00e1n incluidos dentro de la API, son consultas que se encontraron dentro de la versi\u00f3n antigua del sitio web de Retail, pero no tienen un uso en esta API.","title":"Misc"},{"location":"modulos_api/#users","text":"Endpoints para obtener los usuarios que pueden subir archivos a la plataforma, desde aqu\u00ed se pueden modificar sus permisos.","title":"Users"}]}